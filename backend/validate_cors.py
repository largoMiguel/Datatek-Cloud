#!/usr/bin/env python3
"""
Script para validar la configuraci√≥n CORS del backend
"""
import os
import sys

def validate_cors():
    """Valida que ALLOWED_ORIGINS est√© correctamente configurado"""
    print("\nüîç Validando configuraci√≥n CORS...\n")
    
    # Importar settings
    try:
        from app.config.settings import settings
    except ImportError:
        print("‚ùå Error: No se pudo importar settings")
        print("   Aseg√∫rate de estar en el directorio /backend")
        return False
    
    # Verificar ALLOWED_ORIGINS
    allowed_origins = settings.allowed_origins
    cors_origins = settings.cors_origins
    
    print(f"üìã ALLOWED_ORIGINS (env): {allowed_origins}")
    print(f"üìã CORS Origins (parsed): {cors_origins}\n")
    
    # Validaciones
    errors = []
    warnings = []
    
    # 1. Verificar que no est√© vac√≠o
    if not allowed_origins or allowed_origins.strip() == "":
        errors.append("ALLOWED_ORIGINS est√° vac√≠o")
    
    # 2. Verificar formato de URLs
    for origin in cors_origins:
        if origin.endswith('/'):
            warnings.append(f"‚ö†Ô∏è  '{origin}' termina con '/' - deber√≠a removerse")
        
        if not origin.startswith('http://') and not origin.startswith('https://'):
            errors.append(f"'{origin}' no empieza con http:// o https://")
        
        # Verificar espacios
        if ' ' in origin:
            errors.append(f"'{origin}' contiene espacios")
    
    # 3. Verificar que incluya el frontend de producci√≥n
    production_frontend = "https://pqrs-frontend.onrender.com"
    if settings.environment == "production" and production_frontend not in cors_origins:
        warnings.append(f"‚ö†Ô∏è  En producci√≥n pero '{production_frontend}' no est√° en ALLOWED_ORIGINS")
    
    # Mostrar resultados
    print("=" * 60)
    if errors:
        print("‚ùå ERRORES ENCONTRADOS:")
        for error in errors:
            print(f"   ‚Ä¢ {error}")
        print()
    
    if warnings:
        print("‚ö†Ô∏è  ADVERTENCIAS:")
        for warning in warnings:
            print(f"   ‚Ä¢ {warning}")
        print()
    
    if not errors and not warnings:
        print("‚úÖ Configuraci√≥n CORS correcta")
        print()
        print("URLs permitidas:")
        for origin in cors_origins:
            print(f"   ‚úì {origin}")
    
    print("=" * 60)
    
    # Informaci√≥n adicional
    print("\nüìö Informaci√≥n adicional:")
    print(f"   Environment: {settings.environment}")
    print(f"   Debug: {settings.debug}")
    print(f"   Database: {settings.database_url[:30]}...")
    
    return len(errors) == 0

if __name__ == "__main__":
    # Agregar el directorio backend al path
    backend_dir = os.path.dirname(os.path.abspath(__file__))
    sys.path.insert(0, backend_dir)
    
    success = validate_cors()
    sys.exit(0 if success else 1)
